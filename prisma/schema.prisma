// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(uuid())
  email             String     @unique
  name              String
  password          String
  balance           Float      @default(0)
  createdAt         DateTime   @default(now())

  deposits          Deposit[]  @relation("UserDeposits")
  receivedTransfers Transfer[] @relation("UserTransfers")
  sentTransfers     Transfer[] @relation("TransferSender")
  reversals         Reversal[] @relation("UserReversals")
}

model Deposit {
  id           String     @id @default(uuid())
  amount       Float
  bank         String
  accountType  AccountType
  reference    String?
  createdAt    DateTime   @default(now())

  userId       String
  user         User       @relation("UserDeposits", fields: [userId], references: [id])

  reversed     Boolean    @default(false)
  Reversal     Reversal[]
}

model Transfer {
  id           String     @id @default(uuid())
  amount       Float
  description  String?
  createdAt    DateTime   @default(now())

  senderId     String
  sender       User       @relation("TransferSender", fields: [senderId], references: [id])

  recipientId  String
  recipient    User       @relation("UserTransfers", fields: [recipientId], references: [id])

  reversed     Boolean    @default(false)
  Reversal     Reversal[]
}

model Reversal {
  id          String     @id @default(uuid())
  reason      String
  createdAt   DateTime   @default(now())

  userId      String
  user        User       @relation("UserReversals", fields: [userId], references: [id])

  depositId   String?    @unique
  deposit     Deposit?   @relation(fields: [depositId], references: [id])

  transferId  String?    @unique
  transfer    Transfer?  @relation(fields: [transferId], references: [id])
}

enum AccountType {
  CHECKING
  SAVINGS
}
